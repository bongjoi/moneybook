{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","utils/currencyFormatter.js","components/Balance.js","components/IncomeAndExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","state","action","type","deletedTransaction","transactions","filter","transaction","id","payload","localStorage","setItem","JSON","stringify","addedTransaction","initialState","getItem","parse","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","deleteTransaction","addTransaction","currencyFormatter","num","toString","replace","Balance","total","useContext","map","amount","reduce","acc","cur","className","IncomeAndExpenses","amounts","income","item","expense","Transaction","text","sign","Math","abs","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","inputEl","useRef","onSubmit","e","preventDefault","newTransaction","uuidv4","parseInt","current","focus","htmlFor","onChange","target","placeholder","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d9b15267.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n  return <h1>간단 가계부</h1>\r\n}\r\n","export default (state, action) => {\r\n  switch (action.type) {\r\n    case 'DELETE_TRANSACTION':\r\n      const deletedTransaction = state.transactions.filter(\r\n        (transaction) => transaction.id !== action.payload\r\n      )\r\n      localStorage.setItem('transactions', JSON.stringify(deletedTransaction))\r\n      return {\r\n        ...state,\r\n        transactions: deletedTransaction\r\n      }\r\n    case 'ADD_TRANSACTION':\r\n      const addedTransaction = [action.payload, ...state.transactions]\r\n      localStorage.setItem('transactions', JSON.stringify(addedTransaction))\r\n      return {\r\n        ...state,\r\n        transactions: addedTransaction\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { createContext, useReducer } from 'react'\r\nimport AppReducer from './AppReducer'\r\n\r\n// Initial State\r\nconst initialState = {\r\n  transactions: localStorage.getItem('transactions')\r\n    ? JSON.parse(localStorage.getItem('transactions'))\r\n    : []\r\n}\r\n\r\n// Create context\r\nexport const GlobalContext = createContext(initialState)\r\n\r\n// Provider component\r\nexport const GlobalProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(AppReducer, initialState)\r\n\r\n  // Actions\r\n  function deleteTransaction(id) {\r\n    dispatch({\r\n      type: 'DELETE_TRANSACTION',\r\n      payload: id\r\n    })\r\n  }\r\n\r\n  function addTransaction(transaction) {\r\n    dispatch({\r\n      type: 'ADD_TRANSACTION',\r\n      payload: transaction\r\n    })\r\n  }\r\n\r\n  return (\r\n    <GlobalContext.Provider\r\n      value={{ transactions: state.transactions, deleteTransaction, addTransaction }}>\r\n      {children}\r\n    </GlobalContext.Provider>\r\n  )\r\n}\r\n","export const currencyFormatter = (num) => num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\r\n","import React, { useContext } from 'react'\r\n\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { currencyFormatter } from '../utils/currencyFormatter'\r\n\r\nexport const Balance = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n  const amounts = transactions.map(({ amount }) => amount)\r\n  const total = amounts.reduce((acc, cur) => (acc += cur), 0)\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"sub-title\">총 잔액</h2>\r\n      <p className=\"balance\">{currencyFormatter(total)} 원</p>\r\n    </>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { currencyFormatter } from '../utils/currencyFormatter'\r\n\r\nexport const IncomeAndExpenses = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n  const amounts = transactions.map(({ amount }) => amount)\r\n  const income = amounts.filter((item) => item > 0).reduce((acc, cur) => (acc += cur), 0)\r\n  const expense = amounts.filter((item) => item < 0).reduce((acc, cur) => (acc += cur), 0) * -1\r\n\r\n  return (\r\n    <div className=\"inc-exp-container\">\r\n      <div>\r\n        <h3>수입</h3>\r\n        <p className=\"money money--plus\">{currencyFormatter(income)} 원</p>\r\n      </div>\r\n      <div>\r\n        <h3>지출</h3>\r\n        <p className=\"money money--minus\">{currencyFormatter(expense)} 원</p>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { GlobalContext } from '../context/GlobalState'\r\nimport { currencyFormatter } from '../utils/currencyFormatter'\r\n\r\nexport const Transaction = ({ id, text, amount }) => {\r\n  const { deleteTransaction } = useContext(GlobalContext)\r\n  const sign = amount < 0 ? '-' : '+'\r\n\r\n  return (\r\n    <li\r\n      className={\r\n        'transaction__item ' + (amount < 0 ? 'transaction__item--minus' : 'transaction__item--plus')\r\n      }>\r\n      {text}\r\n      <span>\r\n        {sign}\r\n        {currencyFormatter(Math.abs(amount))} 원\r\n      </span>\r\n      <button className=\"btn--delete\" onClick={() => deleteTransaction(id)}>\r\n        x\r\n      </button>\r\n    </li>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\n\r\nimport { Transaction } from './Transaction'\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const TransactionList = () => {\r\n  const { transactions } = useContext(GlobalContext)\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"sub-title\">내역</h2>\r\n      <ul className=\"transaction__list\">\r\n        {transactions.map((transaction) => (\r\n          <Transaction key={transaction.id} {...transaction} />\r\n        ))}\r\n      </ul>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useContext, useRef } from 'react'\r\nimport { v4 as uuidv4 } from 'uuid'\r\n\r\nimport { GlobalContext } from '../context/GlobalState'\r\n\r\nexport const AddTransaction = () => {\r\n  const [text, setText] = useState('')\r\n  const [amount, setAmount] = useState('')\r\n  const inputEl = useRef(null)\r\n\r\n  const { addTransaction } = useContext(GlobalContext)\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n\r\n    const newTransaction = {\r\n      id: uuidv4(),\r\n      text,\r\n      amount: parseInt(amount, 10)\r\n    }\r\n\r\n    addTransaction(newTransaction)\r\n    setText('')\r\n    setAmount('')\r\n    inputEl.current.focus()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2 className=\"sub-title\">내역 추가</h2>\r\n      <form onSubmit={onSubmit}>\r\n        <div>\r\n          <label htmlFor=\"text\">내용</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"text\"\r\n            value={text}\r\n            onChange={(e) => setText(e.target.value)}\r\n            placeholder=\"내용을 입력해주세요.\"\r\n            ref={inputEl}\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"amount\">\r\n            금액\r\n            <br />\r\n            (마이너스: 지출, 플러스: 수입)\r\n          </label>\r\n          <input\r\n            type=\"number\"\r\n            id=\"amount\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n            placeholder=\"금액을 입력해주세요.\"\r\n          />\r\n        </div>\r\n        <button className=\"btn\">내역 추가하기</button>\r\n      </form>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\n\nimport { Header } from './components/Header'\nimport { Balance } from './components/Balance'\nimport { IncomeAndExpenses } from './components/IncomeAndExpenses'\nimport { TransactionList } from './components/TransactionList'\nimport { AddTransaction } from './components/AddTransaction'\n\nimport { GlobalProvider } from './context/GlobalState'\n\nimport './App.css'\n\nfunction App() {\n  return (\n    <GlobalProvider>\n      <Header />\n      <div className=\"container\">\n        <Balance />\n        <IncomeAndExpenses />\n        <TransactionList />\n        <AddTransaction />\n      </div>\n    </GlobalProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}